                            | #######################################################################
                            | # Test for copying block of size 4;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f4d004000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f20400000000000000 | 	irmovq $4, %rdx		# src and dst have 4 elements
0x014: 30f62804000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f7f003000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            |   # Loop header
                            |   # xorq %rax,%rax    # count = 0;
0x032: c0f2f7ffffffffffffff |   iaddq $-9, %rdx
0x03c: 754e00000000000000   |   jge K_Loop
0x045: 70e601000000000000   |   jmp Remainder
                            | 
0x04e:                      | K_Loop:
0x04e: 50870000000000000000 |   mrmovq (%rdi), %r8
0x058: 50970800000000000000 |   mrmovq 0x08(%rdi), %r9
0x062: 6288                 |   andq %r8, %r8
0x064: 40860000000000000000 |   rmmovq %r8, (%rsi)  
0x06e: 718100000000000000   |   jle Npos1
0x077: c0f00100000000000000 |   iaddq $1, %rax
0x081:                      | Npos1:
0x081: 40960800000000000000 |   rmmovq %r9, 0x08(%rsi)
0x08b: 6299                 |   andq %r9, %r9    
0x08d: 50871000000000000000 |   mrmovq 0x10(%rdi), %r8
0x097: 71aa00000000000000   |   jle Npos2
0x0a0: c0f00100000000000000 |   iaddq $1, %rax
0x0aa:                      | Npos2:  
0x0aa: 40861000000000000000 |   rmmovq %r8, 0x10(%rsi)
0x0b4: 6288                 |   andq %r8, %r8
0x0b6: 50871800000000000000 |   mrmovq 0x18(%rdi), %r8
0x0c0: 71d300000000000000   |   jle Npos3    
0x0c9: c0f00100000000000000 |   iaddq $1, %rax
0x0d3:                      | Npos3:
0x0d3: 40861800000000000000 |   rmmovq %r8, 0x18(%rsi)
0x0dd: 6288                 |   andq %r8, %r8
0x0df: 50872000000000000000 |   mrmovq 0x20(%rdi), %r8
0x0e9: 71fc00000000000000   |   jle Npos4  
0x0f2: c0f00100000000000000 |   iaddq $1, %rax
0x0fc:                      | Npos4:
0x0fc: 40862000000000000000 |   rmmovq %r8, 0x20(%rsi)
0x106: 6288                 |   andq %r8, %r8
0x108: 50872800000000000000 |   mrmovq 0x28(%rdi), %r8
0x112: 712501000000000000   |   jle Npos5
0x11b: c0f00100000000000000 |   iaddq $1, %rax
0x125:                      | Npos5:
0x125: 40862800000000000000 |   rmmovq %r8, 0x28(%rsi)
0x12f: 6288                 |   andq %r8, %r8
0x131: 50873000000000000000 |   mrmovq 0x30(%rdi), %r8
0x13b: 714e01000000000000   |   jle Npos6
0x144: c0f00100000000000000 |   iaddq $1, %rax
0x14e:                      | Npos6:
0x14e: 40863000000000000000 |   rmmovq %r8, 0x30(%rsi)
0x158: 6288                 |   andq %r8, %r8
0x15a: 50873800000000000000 |   mrmovq 0x38(%rdi), %r8
0x164: 717701000000000000   |   jle Npos7
0x16d: c0f00100000000000000 |   iaddq $1, %rax
0x177:                      | Npos7:
0x177: 40863800000000000000 |   rmmovq %r8, 0x38(%rsi)
0x181: 6288                 |   andq %r8, %r8  
0x183: 50874000000000000000 |   mrmovq 0x40(%rdi), %r8
0x18d: 71a001000000000000   |   jle Npos8
0x196: c0f00100000000000000 |   iaddq $1, %rax
0x1a0:                      | Npos8:
0x1a0: 40864000000000000000 |   rmmovq %r8, 0x40(%rsi)
0x1aa: 6288                 |   andq %r8, %r8  
0x1ac: 71bf01000000000000   |   jle Npos9
0x1b5: c0f00100000000000000 |   iaddq $1, %rax
0x1bf:                      | Npos9:
0x1bf: c0f74800000000000000 |   iaddq $0x48, %rdi  
0x1c9: c0f64800000000000000 |   iaddq $0x48, %rsi
0x1d3: c0f2f7ffffffffffffff |   iaddq $-9, %rdx
0x1dd: 754e00000000000000   |   jge K_Loop
                            | 
0x1e6:                      | Remainder:
0x1e6: c0f20500000000000000 |   iaddq $5, %rdx
0x1f0: 50870000000000000000 |   mrmovq (%rdi), %r8
0x1fa: 721f02000000000000   |   jl Remainder_0_3
0x203: 40860000000000000000 |   rmmovq %r8, (%rsi)
0x20d: 766202000000000000   |   jg Remainder_5_8
0x216: 703e03000000000000   |   jmp Remainder_4
                            | 
0x21f:                      | Remainder_0_3:
0x21f: c0f20200000000000000 |   iaddq $2, %rdx
0x229: 724e02000000000000   |   jl Remainder_0_1
0x232: 40860000000000000000 |   rmmovq %r8, (%rsi)
0x23c: 739003000000000000   |   je Remainder_2
0x245: 766703000000000000   |   jg Remainder_3
                            | 
0x24e:                      | Remainder_0_1:
0x24e: c0f20100000000000000 |   iaddq $1, %rdx
0x258: 73cf03000000000000   |   je Remainder_1
0x261: 90                   |   ret
                            | 
0x262:                      | Remainder_5_8:
0x262: c0f2feffffffffffffff |   iaddq $-2, %rdx
0x26c: 768702000000000000   |   jg Remainder_7_8
0x275: 721503000000000000   |   jl Remainder_5
0x27e: 73ec02000000000000   |   je Remainder_6
                            | 
0x287:                      | Remainder_7_8:
0x287: c0f2ffffffffffffffff |   iaddq $-1, %rdx
0x291: 73c302000000000000   |   je Remainder_7
                            | 
0x29a:                      | Remainder_8:
0x29a: 6288                 |   andq %r8, %r8
0x29c: 50873800000000000000 |   mrmovq 56(%rdi), %r8
0x2a6: 71b902000000000000   |   jle Remainder_Nop8
0x2af: c0f00100000000000000 |   iaddq $1, %rax
0x2b9:                      | Remainder_Nop8:
0x2b9: 40863800000000000000 |   rmmovq %r8, 56(%rsi)
                            | 
0x2c3:                      | Remainder_7:
0x2c3: 6288                 |   andq %r8, %r8
0x2c5: 50873000000000000000 |   mrmovq 48(%rdi), %r8
0x2cf: 71e202000000000000   |   jle Remainder_Nop7
0x2d8: c0f00100000000000000 |   iaddq $1, %rax
0x2e2:                      | Remainder_Nop7:
0x2e2: 40863000000000000000 |   rmmovq %r8, 48(%rsi)
                            | 
0x2ec:                      | Remainder_6:
0x2ec: 6288                 |   andq %r8, %r8
0x2ee: 50872800000000000000 |   mrmovq 40(%rdi), %r8
0x2f8: 710b03000000000000   |   jle Remainder_Nop6
0x301: c0f00100000000000000 |   iaddq $1, %rax
0x30b:                      | Remainder_Nop6:
0x30b: 40862800000000000000 |   rmmovq %r8, 40(%rsi)
                            | 
0x315:                      | Remainder_5:
0x315: 6288                 |   andq %r8, %r8
0x317: 50872000000000000000 |   mrmovq 32(%rdi), %r8
0x321: 713403000000000000   |   jle Remainder_Nop5
0x32a: c0f00100000000000000 |   iaddq $1, %rax
0x334:                      | Remainder_Nop5:
0x334: 40862000000000000000 |   rmmovq %r8, 32(%rsi)
                            | 
0x33e:                      | Remainder_4:
0x33e: 6288                 |   andq %r8, %r8
0x340: 50871800000000000000 |   mrmovq 24(%rdi), %r8
0x34a: 715d03000000000000   |   jle Remainder_Nop4
0x353: c0f00100000000000000 |   iaddq $1, %rax
0x35d:                      | Remainder_Nop4:
0x35d: 40861800000000000000 |   rmmovq %r8, 24(%rsi)
                            | 
0x367:                      | Remainder_3:
0x367: 6288                 |   andq %r8, %r8
0x369: 50871000000000000000 |   mrmovq 16(%rdi), %r8
0x373: 718603000000000000   |   jle Remainder_Nop3
0x37c: c0f00100000000000000 |   iaddq $1, %rax
0x386:                      | Remainder_Nop3:
0x386: 40861000000000000000 |   rmmovq %r8, 16(%rsi)
                            | 
0x390:                      | Remainder_2:
0x390: 6288                 |   andq %r8, %r8
0x392: 50870800000000000000 |   mrmovq 8(%rdi), %r8
0x39c: 71af03000000000000   |   jle Remainder_Nop2
0x3a5: c0f00100000000000000 |   iaddq $1, %rax
0x3af:                      | Remainder_Nop2:
0x3af: 40860800000000000000 |   rmmovq %r8, 8(%rsi)
0x3b9: 6288                 |   andq %r8, %r8
0x3bb: 71ef03000000000000   |   jle Done
0x3c4: c0f00100000000000000 |   iaddq $1, %rax
0x3ce: 90                   |   ret
                            | 
0x3cf:                      | Remainder_1:
0x3cf: 40860000000000000000 |   rmmovq %r8, (%rsi)
0x3d9: 6288                 |   andq %r8, %r8
0x3db: 71ef03000000000000   |   jle Done
0x3e4: c0f00100000000000000 |   iaddq $1, %rax
0x3ee: 90                   |   ret
                            | 
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x3ef:                      | Done:
0x3ef: 90                   |   ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x3f0:                      | End:
                            | #/* $end ncopy-ys */
0x3f0:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x3f0:                      | 	.align 8
0x3f0:                      | src:
0x3f0: 0100000000000000     | 	.quad 1
0x3f8: 0200000000000000     | 	.quad 2
0x400: fdffffffffffffff     | 	.quad -3
0x408: fcffffffffffffff     | 	.quad -4
0x410: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x420:                      | 	.align 16
0x420:                      | Predest:
0x420: fadebc0000000000     | 	.quad 0xbcdefa
0x428:                      | dest:
0x428: abefcd0000000000     | 	.quad 0xcdefab
0x430: abefcd0000000000     | 	.quad 0xcdefab
0x438: abefcd0000000000     | 	.quad 0xcdefab
0x440: abefcd0000000000     | 	.quad 0xcdefab
0x448:                      | Postdest:
0x448: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x450:                      | .align 8
                            | # Run time stack
0x450: 0000000000000000     | 	.quad 0
0x458: 0000000000000000     | 	.quad 0
0x460: 0000000000000000     | 	.quad 0
0x468: 0000000000000000     | 	.quad 0
0x470: 0000000000000000     | 	.quad 0
0x478: 0000000000000000     | 	.quad 0
0x480: 0000000000000000     | 	.quad 0
0x488: 0000000000000000     | 	.quad 0
0x490: 0000000000000000     | 	.quad 0
0x498: 0000000000000000     | 	.quad 0
0x4a0: 0000000000000000     | 	.quad 0
0x4a8: 0000000000000000     | 	.quad 0
0x4b0: 0000000000000000     | 	.quad 0
0x4b8: 0000000000000000     | 	.quad 0
0x4c0: 0000000000000000     | 	.quad 0
0x4c8: 0000000000000000     | 	.quad 0
                            | 
0x4d0:                      | Stack:
