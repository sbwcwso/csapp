                            | # Execution begins at address 0 
0x000:                      |   .pos 0
0x000: 30f40002000000000000 |   irmovq stack, %rsp    # Set up stack pointer
0x00a: 30f72000000000000000 |   irmovq ele1,%rdi
0x014: 805000000000000000   |   call sum_list    # sum_list(ele1)
0x01d: 00                   |   halt      # Terminate program 
                            | 
0x020:                      | .align 8
0x020:                      | ele1:
0x020: 0a00000000000000     |   .quad 0x00a
0x028: 3000000000000000     |   .quad ele2
0x030:                      | ele2:
0x030: b000000000000000     |   .quad 0x0b0
0x038: 4000000000000000     |   .quad ele3
0x040:                      | ele3:
0x040: 000c000000000000     |   .quad 0xc00
0x048: 0000000000000000     |   .quad 0
                            | 
                            | # long sum_list(list_ptr ls)
                            | # ls in %rdi
0x050:                      | sum_list:
0x050: 6300                 |   xorq %rax, %rax  # val = 0
0x052: 6277                 |   andq %rdi, %rdi  # set CC
0x054: 737e00000000000000   |   je done
0x05d:                      | loop:
0x05d: 50670000000000000000 |   mrmovq (%rdi), %rsi  # get ls->val
0x067: 6060                 |   addq %rsi, %rax  # val += ls->val
0x069: 50770800000000000000 |   mrmovq 0x8(%rdi), %rdi  # ls = ls-next;
0x073: 6277                 |   andq %rdi, %rdi  # set CC
0x075: 745d00000000000000   |   jne loop
0x07e:                      | done:
0x07e: 90                   |   ret
                            | 
                            | # Stack starts here and grows to lower addresses
0x200:                      |   .pos 0x200
0x200:                      | stack:
